apply from: "$project.rootDir/build_scripts/deps_versions.gradle"

ext {

    //--------------Feature------------------------------------
    applyFeatureApiModule = { module ->
        baseNativeModule(module)
        module.dependencies {
            implementation project(":core:navigation:api")
            implementation project(":base:navigation:api")
        }
    }

    applyFeatureImplModule = { module ->
        baseAndroidModule(module)
        applyPlatformNavigation(module)
        applyAndroidBinding(module)
        applyGlide(module)
        module.dependencies {
            implementation project(":base:app")
            implementation project(":base:di")
            implementation project(":core:utils")
            implementation project(":core:uiUtils")
        }
    }

    //--------------Data------------------------------------
    applyDataApiModule = { module ->
        baseNativeModule(module)
    }

    applyDataImplAndroidModule = { module ->
        baseAndroidModule(module)
    }

    applyDataImplModule = { module ->
        baseNativeModule(module)
    }

    //--------------Infrastructure------------------------------------
    applyInfrastructureApiModule = { module ->
        baseNativeModule(module)
    }

    applyInfrastructureImplAndroidModule = { module ->
        baseAndroidModule(module)
    }

    applyInfrastructureImplModule = { module ->
        baseNativeModule(module)
    }

    //--------------Domain------------------------------------
    applyDomainImplAndroidModule = { module ->
        baseAndroidModule(module)
    }

    applyDomainImplModule = { module ->
        baseNativeModule(module)
    }

    //--------------Base------------------------------------
    applyBaseModule = { module ->
        baseNativeModule(module)
    }

    applyBaseAndroidModule = { module ->
        baseAndroidModule(module)
    }

    //--------------Core------------------------------------
    applyCoreModule = { module ->
        baseNativeModule(module)
    }

    applyCoreAndroidModule = { module ->
        baseAndroidModule(module)
    }

    //--------------Common------------------------------------
    baseNativeModule = { module ->
        module.configure(module) {
            apply plugin: 'java-library'
            apply plugin: 'org.jetbrains.kotlin.jvm'
            apply plugin: 'kotlin'
            apply plugin: 'kotlinx-serialization'

            java {
                sourceCompatibility = JavaVersion.VERSION_17
                targetCompatibility = JavaVersion.VERSION_17
            }
        }
        module.dependencies {
            implementation javaxInject
            implementation coroutines
            testImplementation unitTest
        }
    }

    baseAndroidModule = { module ->
        module.configure(module) {
            apply plugin: 'com.android.library'
            apply plugin: 'kotlin-android'

            android {
                compileSdk compile_sdk_version

                defaultConfig {
                    minSdk min_sdk_version
                    targetSdk target_sdk_version
                    versionCode version_code
                    versionName version_name

                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                    consumerProguardFiles "proguard-rules.pro"
                }

                buildTypes {
                    debug {
                        minifyEnabled false
                        debuggable true
                    }
                    release {
                        minifyEnabled false
                        debuggable false
                    }
                }

                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_17
                    targetCompatibility JavaVersion.VERSION_17
                }

                kotlinOptions {
                    jvmTarget = JavaVersion.VERSION_17.toString()
                }
            }
        }
        module.dependencies {
            implementation baseAndroidDeps
            implementation coroutines
            implementation javaxInject

            androidTestImplementation androidTest
            testImplementation unitTest
        }
    }

    applyAndroidBinding = { module ->
        module.configure(module) {
            apply plugin: 'kotlin-kapt'

            android {
                buildFeatures {
                    viewBinding true
                }
            }
        }
        module.dependencies {
            implementation viewBindinDdelegate
            implementation adapterDelegates
        }
    }

    applyGlide = { module ->
        module.configure(module) {
            apply plugin: 'kotlin-kapt'
        }
        module.dependencies {
            implementation glide
        }
    }

    applyPlatformNavigation = { module ->
        module.dependencies {
            implementation project(":core:navigation:api")
            implementation project(":core:navigation:impl")
            implementation project(":base:navigation:api")
            implementation project(":base:navigation:impl")
        }
    }

    applyJetpackCompose = { module ->
        module.configure(module) {
            android {

                buildFeatures {
                    compose = true
                }

                compileOptions {
                    kotlinCompilerExtensionVersion = "1.5.10"
                }
            }
        }
        module.dependencies {
            implementation("androidx.activity:activity-compose:$activityKtx")
            implementation(platform("androidx.compose:compose-bom:2024.02.02"))
            implementation("androidx.compose.ui:ui")
            implementation("androidx.compose.ui:ui-graphics")
            implementation("androidx.compose.ui:ui-tooling-preview")
            implementation("androidx.compose.material3:material3")
            debugImplementation("androidx.compose.ui:ui-tooling")
            debugImplementation("androidx.compose.ui:ui-test-manifest")
        }
    }

    applyDagger = { module ->
        module.configure(module) {
            apply plugin: 'kotlin-kapt'
        }
        module.dependencies {
            implementation "com.google.dagger:dagger:$dagger_version"
            kapt "com.google.dagger:dagger-compiler:$dagger_version"
        }
    }
}