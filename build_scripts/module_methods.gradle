ext {

    //--------------Feature------------------------------------
    applyFeatureApiModule = { module ->
        baseNativeModule(module)
        module.dependencies {
            implementation project(":core:navigation:api")
            implementation project(":base:navigation:api")
        }
    }

    applyFeatureImplModule = { module ->
        baseAndroidModule(module)
        applyPlatformNavigation(module)
        applyAndroidBinding(module)
        applyGlide(module)
        module.dependencies {
            implementation project(":base:app")
            implementation project(":base:di")
            implementation project(":core:utils")
            implementation project(":core:uiUtils")
        }
    }

    //--------------Data------------------------------------
    applyDataApiModule = { module ->
        baseNativeModule(module)
    }

    applyDataImplAndroidModule = { module ->
        baseAndroidModule(module)
    }

    applyDataImplModule = { module ->
        baseNativeModule(module)
    }

    //--------------Infrastructure------------------------------------
    applyInfrastructureApiModule = { module ->
        baseNativeModule(module)
    }

    applyInfrastructureImplAndroidModule = { module ->
        baseAndroidModule(module)
    }

    applyInfrastructureImplModule = { module ->
        baseNativeModule(module)
    }

    //--------------Domain------------------------------------
    applyDomainImplAndroidModule = { module ->
        baseAndroidModule(module)
    }

    applyDomainImplModule = { module ->
        baseNativeModule(module)
    }

    //--------------Base------------------------------------
    applyBaseModule = { module ->
        baseNativeModule(module)
    }

    applyBaseAndroidModule = { module ->
        baseAndroidModule(module)
    }

    //--------------Core------------------------------------
    applyCoreModule = { module ->
        baseNativeModule(module)
    }

    applyCoreAndroidModule = { module ->
        baseAndroidModule(module)
    }

    //--------------Common------------------------------------
    baseNativeModule = { module ->
        module.configure(module) {
            apply plugin: 'java-library'
            apply plugin: 'org.jetbrains.kotlin.jvm'
            apply plugin: 'kotlin'
            apply plugin: 'kotlinx-serialization'

            java {
                sourceCompatibility = JavaVersion.VERSION_17
                targetCompatibility = JavaVersion.VERSION_17
            }
        }
        module.dependencies {
            implementation libs.javax.inject
            implementation libs.bundles.coroutines
            testImplementation libs.bundles.unit.test
        }
    }

    baseAndroidModule = { module ->
        module.configure(module) {
            apply plugin: 'com.android.library'
            apply plugin: 'org.jetbrains.kotlin.android'
            applyJetpackCompose(this)

            android {
                compileSdk libs.versions.compile.sdk.get().toInteger()

                defaultConfig {
                    minSdk libs.versions.min.sdk.get().toInteger()
                    targetSdk libs.versions.target.sdk.get().toInteger()
                    versionCode libs.versions.version.code.get().toInteger()
                    versionName libs.versions.version.name.get()

                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                    consumerProguardFiles "proguard-rules.pro"
                    vectorDrawables.useSupportLibrary = true
                }

                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_17
                    targetCompatibility JavaVersion.VERSION_17
                }

                kotlinOptions {
                    jvmTarget = JavaVersion.VERSION_17.toString()
                }
            }
        }
        module.dependencies {
            implementation libs.bundles.base.android
            implementation libs.bundles.coroutines
            implementation libs.javax.inject

            testImplementation libs.bundles.unit.test
            androidTestImplementation libs.bundles.android.test
        }
    }

    applyAndroidBinding = { module ->
        module.configure(module) {
            apply plugin: 'kotlin-kapt'

            android {
                buildFeatures {
                    viewBinding true
                }
            }
        }
        module.dependencies {
            implementation libs.viewBindinDdelegate
            implementation libs.bundles.adapter.delegates
        }
    }

    applyGlide = { module ->
        module.configure(module) {
            apply plugin: 'kotlin-kapt'
        }
        module.dependencies {
            implementation libs.glide
        }
    }

    applyPlatformNavigation = { module ->
        module.dependencies {
            implementation project(":core:navigation:api")
            implementation project(":core:navigation:impl")
            implementation project(":base:navigation:api")
            implementation project(":base:navigation:impl")
        }
    }

    applyJetpackCompose = { module ->
        module.configure(module) {
            android {

                buildFeatures {
                    compose = true
                }

                composeOptions {
                    kotlinCompilerExtensionVersion = libs.versions.composeCompilerVer.get().toString()
                }
            }
        }
        module.dependencies {
            implementation(platform(libs.compose.bom))
            implementation(libs.bundles.compose.all)
            debugImplementation(libs.bundles.compose.debug)
        }
    }

    applyDagger = { module ->
        module.configure(module) {
            apply plugin: 'kotlin-kapt'
        }
        module.dependencies {
            implementation libs.dagger
            kapt libs.dagger.compiler
        }
    }

    firebaseBom = { module ->
        module.dependencies {
            implementation platform(libs.firebase.bom)
            implementation libs.bundles.firebase.all
        }
    }
}