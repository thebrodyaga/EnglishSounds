apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'
apply from: "$project.rootDir/build_scripts/deps_versions.gradle"

android {
    compileSdk compile_sdk_version
    defaultConfig {
        applicationId "com.thebrodyaga.englishsounds"
        minSdk min_sdk_version
        targetSdk target_sdk_version
        versionCode version_code
        versionName version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        project.archivesBaseName = "English Sounds-v" + versionName + "(" + versionCode + ")"
    }
    def props = new Properties()
    file("app.properties").withInputStream { props.load(it) }
    signingConfigs {
        release {
            keyAlias props.getProperty("RELEASE_KEY_ALIAS")
            keyPassword props.getProperty("RELEASE_KEY_PASSWORD")
            storeFile file(props.getProperty("RELEASE_STORE_FILE"))
            storePassword props.getProperty("RELEASE_STORE_PASSWORD")
        }
    }

    buildTypes {
        debug {
            manifestPlaceholders = [enableCrashReporting          : "false",
                                    deactivatedAnalyticsCollection: "true",
                                    addmob_app_id                 : props.getProperty('ADMOB_APP_ID')]
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [enableCrashReporting          : "true",
                                    deactivatedAnalyticsCollection: "false",
                                    addmob_app_id                 : props.getProperty('ADMOB_APP_ID')]
        }
    }
    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    androidExtensions {
        experimental = true
    }
}


ext {
    retrofit = '2.6.1'
    dagger = '2.25.2'
    glide = '4.10.0'
    leakcanary = "1.5.4"
    room = "1.1.1"
    moxy = '2.0.2'
    room_version = "2.2.1"
    exo_player = "2.11.5"
    play_core = "1.8.0"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.0-alpha01'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.android.material:material:1.2.1'

    implementation "com.google.android.play:core:$play_core"
    implementation "com.google.android.play:core-ktx:$play_core"

    //firebase
    implementation 'com.google.firebase:firebase-analytics:17.4.3'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.1'
    implementation 'com.google.firebase:firebase-perf:19.0.7'

    //AdMob
    implementation 'com.google.android.gms:play-services-ads:19.1.0'

    //navigation
    implementation 'ru.terrakok.cicerone:cicerone:5.1.1'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofit}"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.12'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.1.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-core:3.0.0'

    //premissions
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    //exoplayer
    implementation "com.google.android.exoplayer:exoplayer-core:${exo_player}"
    implementation "com.google.android.exoplayer:exoplayer-ui:${exo_player}"
    implementation "com.google.android.exoplayer:extension-mediasession:${exo_player}"

    //Moxy
    implementation "com.github.moxy-community:moxy:${moxy}"
    kapt "com.github.moxy-community:moxy-compiler:${moxy}"
    implementation "com.github.moxy-community:moxy-androidx:${moxy}"
    implementation "com.github.moxy-community:moxy-material:${moxy}"


    //dagger
    implementation "com.google.dagger:dagger:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    implementation "com.google.dagger:dagger-android:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"

    //AdapterDelegates
    implementation 'com.hannesdorfmann:adapterdelegates4:4.3.0'
    // If you use Kotlin Android Extensions and synthetic properties (alternative to findViewById())
    implementation 'com.hannesdorfmann:adapterdelegates4-kotlin-dsl-layoutcontainer:4.3.0'

    //logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //youtube
    implementation('com.pierfrancescosoffritti.androidyoutubeplayer:core:10.0.5') {
        exclude group: 'androidx.appcompat'
    }

    //glide
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    //RecyclerView-animators
    implementation 'jp.wasabeef:recyclerview-animators:3.0.0'
}
apply plugin: 'com.google.gms.google-services'
